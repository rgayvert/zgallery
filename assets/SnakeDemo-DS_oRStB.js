var z=Object.defineProperty;var P=(s,a,t)=>a in s?z(s,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[a]=t;var r=(s,a,t)=>(P(s,typeof a!="symbol"?a+"":a,t),t);import{V as S,a as o,ab as u,P as p,aP as w,l as d,aG as k,f as g,b as l,j as y,B as x,ad as D,ai as B,g as H,aH as C,bm as f,G as M}from"./index-CJTWxX7x.js";import{S as A,A as I}from"./Animator-BLHFTScl.js";class V extends A{constructor(t,e,n,i,h,c,m){super();r(this,"elapsedTime",0);r(this,"interval",150);this.bounds=t,this.blockSize=e,this.segments=n,this.direction=i,this.pellet=h,this.onHit=c,this.onCrash=m}get head(){return this.segments.at(0)}get tail(){return this.segments.at(-1)}indexOfSegment(t){return this.segments.indexOf(t)}meets(t){return!!this.segments.find(e=>t.intersects(e.rect.get()))}setDirection(t,e){const n=this.direction.get();n.x*t===0&&n.y*e===0&&this.direction.set(S(t,e))}isOverPellet(){return this.head.rect.get().origin.equals(this.pellet.get().scalarMultiply(this.blockSize))}isCrash(t){return!this.bounds.contains(t)}step(t){if(this.elapsedTime+=t,this.elapsedTime>this.interval){const e=this.tail,n=e.rect.get(),i=this.head.rect.get().translatedBy(this.direction.get().negated().scalarMultiply(this.blockSize));this.isCrash(i)?this.onCrash():(this.head.isHead.set(!1),e.rect.set(i),e.isHead.set(!0),this.segments.set([e,...this.segments.get().slice(0,-1)]),this.elapsedTime=0,this.isOverPellet()&&(this.segments.push({isHead:o(!1),rect:o(n)}),this.onHit()))}}}class v extends I{constructor(){super();r(this,"blockSize",28);r(this,"nrows",15);r(this,"ncolumns",21);r(this,"bounds",u(0,0,this.ncolumns*this.blockSize,this.nrows*this.blockSize));r(this,"initialLength",5);r(this,"snake");r(this,"pellet");r(this,"offscreenPoint",p(-100,-100));r(this,"direction",o(S(0,0)));this.pellet=o(this.offscreenPoint),this.snake=new V(this.bounds,this.blockSize,w([]),this.direction,this.pellet,()=>this.placePellet(),()=>this.onCrash()),this.setItems([this.snake])}onCrash(){this.pause()}randomize(){this.direction.set(this.randomDirection()),this.snake.segments.set(this.randomSegments(this.direction.get())),this.placePellet()}placePellet(){this.pellet.set(this.randomPelletPoint())}start(){this.randomize(),super.start()}pelletCenter(){const t=this.blockSize/2;return o(()=>p(this.pellet.get().x*this.blockSize+t,this.pellet.get().y*this.blockSize+t))}randomPointInBox(t){return p(d.randomInt(t.left,t.right),d.randomInt(t.top,t.bottom))}randomDirection(){const t=d.randomInt(-1,1),e=t===0?d.randomElement([-1,1]):0;return S(t,e)}randomPelletPoint(){let t,e;do e=this.randomPointInBox(u(0,0,this.ncolumns-1,this.nrows-1)),t=Math.min(...this.snake.segments.map(n=>n.rect.get().center.distanceTo(e)));while(t<4);return e}randomSegments(t){const e=this.initialLength+1,n=this.randomPointInBox(u(e,e,this.ncolumns-e*2,this.nrows-e*2)),h=[{isHead:o(!0),rect:o(n.scalarMultiply(this.blockSize).extent(k(this.blockSize,this.blockSize)))}];for(let c=1;c<e-1;c++){const m=t.scalarMultiply(c),b={isHead:o(!1),rect:o(n.add(m).scalarMultiply(this.blockSize).extent(k(this.blockSize,this.blockSize)))};h.push(b)}return h}turn(t,e){this.snake.setDirection(t,e)}}function G(){const s=new v;function a(i){return f({rect:u(1,1,s.blockSize-2,s.blockSize-2),rx:8,ry:8,fill:o(()=>i.isHead.get()?l.color.red:l.color.primary),transform:o(()=>`translate(${i.rect.get().x}px, ${i.rect.get().y}px`),model:i})}function t(){return C({c:s.pelletCenter(),r:s.blockSize/2,fill:l.color.tertiary})}function e(){return f({rect:s.bounds,fill:l.color.primaryContainer})}const n={width:g(90),padding:l.space.s4,background:l.color.gray,onIntersectionVisible:i=>i.focus(),outline:"none",events:{keyBindings:{ArrowUp:()=>s.turn(0,1),ArrowDown:()=>s.turn(0,-1),ArrowLeft:()=>s.turn(1,0),ArrowRight:()=>s.turn(-1,0)}}};return y({width:g(100),gap:l.space.s8,name:"Snake",model:s}).append(x(n).append(D({width:g(100),bounds:s.bounds}).append(e(),t(),B(s.snake.segments,i=>i,i=>a(i)))),H({font:l.font.headline_large,label:o(()=>s.isRunning?"Stop":"Start"),action:()=>s.isRunning?s.pause():s.start(),preserveFocus:!0}))}function F(){return M(R)}const R={sourceDir:"/source/Demos/Snake",sections:[{title:"Snake",componentFn:G,sources:["SnakeModel.ts","SnakeBoard.ts","Snake.ts"],markdown:"Snake.md"}]};export{F as SnakeDemo,F as default};
