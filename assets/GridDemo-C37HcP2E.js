import{a as l,c as o,P as h,aM as u,aN as t,T as f,m as p,C as k,a9 as w,p as b,V as x,L as y,$ as G,k as m,aj as L,B as E,aO as S,G as M}from"./index-9pqxGvR_.js";function A(r,a,n,e={}){function c(){return u.instance.break(t(r.rows),t(a.rows),t(n.rows))}function s(){return u.instance.break(t(r.columns),t(a.columns),t(n.columns))}function i(){return u.instance.break(t(r.gap),t(a.gap),t(n.gap))}function g(){return u.instance.break(t(r.areas),t(a.areas),t(n.areas))}return e.templateRows=l(()=>c()||""),e.templateColumns=l(()=>s()||""),e.gap=i()||o.space.s0,e.templateAreas=l(()=>g()||""),h(e)}function D(){const r=`<h1>Main article area</h1><p>
    In this layout, we display the areas in source order for a small screen. 
    We go to a two column layout, and then to a three
    column layout by redefining the grid, and the placement of items on the grid.`,a="Link 1<br>Link 2<br>Link 3";function n(i,g){return f(g,{gridArea:i,background:o.color.background,color:o.color.primary})}const e={areas:'"header" "nav" "content" "sidebar" "ad" "footer"',gap:o.space.s1},c={areas:`
       "header  header"
       "nav     nav"
       "sidebar content"
       "ad      footer"`,columns:"1fr 3fr",gap:o.space.s1},s={areas:`
      "header header  header"
      "nav    content sidebar"
      "nav    content ad"
      "footer footer  footer"`,columns:"1fr 4fr 1fr",gap:o.space.s1};return A(e,c,s,{border:o.border.thin,background:o.color.tertiary}).append(n("header","The header"),n("content",r),n("nav",a),n("sidebar","Sidebar"),n("ad","Advertising and more"),n("footer","The footer"))}function T(){const r=[[1,2,3],[4,5,6]],a={nrows:r.length,ncolumns:Math.max(...r.map(e=>e.length)),border:o.border.thin,gap:o.space.s1,background:o.color.gray},n={width:p(6),height:p(6),background:o.color.background};return h(a).append(...r.map(e=>e.map(c=>k(c.toString(),n))).flat())}function d(r,a,n){if(a===n)return[r];if(r.r2-r.r1>r.c2-r.c1){const e=r.r1+Math.round(m.randomInt(20,80)/100*(r.r2-r.r1));return[...d({...r,r2:e},a+1,n),...d({...r,r1:e},a+1,n)]}else{const e=r.c1+Math.round(m.randomInt(20,80)/100*(r.c2-r.c1));return[...d({...r,c2:e},a+1,n),...d({...r,c1:e},a+1,n)]}}function v(){const r=[o.color.red,o.color.white,o.color.blue,o.color.yellow,o.color.green,o.color.black],a=w.instance.addAtom("mondrian","4"),n=l(()=>d({r1:1,c1:1,r2:33,c2:33},0,parseInt(a.get()))),e={nrows:32,ncolumns:32,border:o.border.thin,background:o.color.gray,gap:b(1),width:p(50),height:p(50)},c={background:o.color.background,border:o.border.thin};return x({alignItems:"center",gap:o.space.s5}).append(y("Level:").append(G(a,m.sequence(2,4).map(s=>s.toString()),{width:p(6),padding:b(0)})),h(e).append(L(n,(s,i)=>s,(s,i)=>E({...c,background:m.randomElement(r),gridArea:S(s)}))))}function I(){return M(R)}const R={sourceDir:"/source/Demos/Grid",sections:[{title:"Simple Grid",componentFn:T,sources:["SimpleGridExample.ts"],markdown:"SimpleGridExample.md"},{title:"Responsive Grid Layout",componentFn:D,sources:["ResponsiveGridLayoutExample.ts"],markdown:"ResponsiveGridLayoutExample.md"},{title:"Mondrian Grid",componentFn:v,sources:["MondrianGridExample.ts"],markdown:"MondrianGridExample.md"}]};export{I as GridLayoutDemo,I as default};
